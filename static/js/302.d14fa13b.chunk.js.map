{"version":3,"file":"static/js/302.d14fa13b.chunk.js","mappings":"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","sources":["webpack://react01/./src/Components/Profile/ProfileInfo/ProfileInfo.module.css?23b5","Components/Profile/ProfileInfo/ProfileStatus.jsx","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react01/./src/Components/Profile/MyPosts/Post/Post.module.css?54ab","Components/Profile/MyPosts/Post/Post.jsx","webpack://react01/./src/Components/Profile/MyPosts/MyPosts.module.css?bd90","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"ProfileInfo_content__KRSne\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__ad9rh\"};","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activateEditMode = () =>{\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || 'no status'}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || 'no status'}</span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n\r\n","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile){\r\n        return <Preloader/>\r\n    };\r\n    return (\r\n        <div>\r\n            {/*<div className={classes.content}>*/}\r\n            {/*    <img src=\"https://дизайн-обложки.рф/wp-content/uploads/2021/06/23964-scaled.jpg\"/>*/}\r\n            {/*</div>*/}\r\n            <div className={classes.descriptionBlock}>\r\n                <img src={props.profile.photos.large} alt=\"\"/>\r\n                <ProfileStatusWithHooks status = {props.status} updateStatus={props.updateStatus}/>\r\n                <div>\r\n                    Status: {props.profile.aboutMe}\r\n                </div>\r\n                <div>\r\n                    My professional skills: {props.profile.lookingForAJobDescription}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo;\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__1eFxW\"};","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img\r\n                src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT3MckZuLGiK5NEtLYP_k-gd7MDLg5FTlauIBkkjqcEKbxgjPl3_rH_Fwil44cqc-Vc_IE&usqp=CAU\"\r\n                alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>Like </span>{props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__n33P6\",\"posts\":\"MyPosts_posts__GTqtk\"};","//DIMYCH\r\nimport React from 'react';\r\nimport Post from \"./Post/Post\";\r\nimport styles from './MyPosts.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newPostText'} placeholder={'Enter your post'}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo (props => {\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} id={p.id}/>);\r\n\r\n    let newPostElement = React.createRef()\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={styles.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;\r\n\r\n//REACT-FINAL-FORM\r\n//import {Form} from \"react-final-form\";\r\n// const AddNewPostForm = props => {\r\n//     return (\r\n//         <Form\r\n//             initialValues={{\r\n//                 newPostText: ''\r\n//             }}\r\n//             onSubmit={values => {\r\n//                 // send values to the cloud\r\n//             }}\r\n//             validate={values => {\r\n//                 // do validation here, and return errors object\r\n//             }}>\r\n//             {({handleSubmit, pristine, form, submitting}) => (\r\n//                 <form onSubmit={handleSubmit}>\r\n//\r\n//                     <div>\r\n//                         <Field placeholder={'your post'} name={'newPostText'} component={'input'} type={'text'}/>\r\n//                     </div>\r\n//                     <div>\r\n//                         <button type=\"submit\" disabled={submitting}>\r\n//                             Post\r\n//                         </button>\r\n//                     </div>\r\n//\r\n//                 </form>\r\n//             )}\r\n//         </Form>\r\n//     )\r\n// }\r\n// const MyPosts = (props) => {\r\n//     let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} id={p.id}/>);\r\n//\r\n//     let newPostElement = React.createRef()\r\n//\r\n//     let onAddPost = (initialValues) => {\r\n//         props.addPost(initialValues.newPostText);\r\n//     }\r\n//\r\n//     return (\r\n//         <div className={classes.postsBlock}>\r\n//             <h3>My posts</h3>\r\n//             <AddNewPostForm onSubmit={onAddPost}/>\r\n//             <div className={classes.posts}>\r\n//                 {postsElements}\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n// export default MyPosts\r\n\r\n\r\n// REACT-HOOK-FORM\r\n//import {useForm} from \"react-hook-form\";\r\n\r\n// const AddNewPostForm = (props) => {\r\n//     const { register, handleSubmit, setValue  } = useForm({\r\n//         defaultValues: {\r\n//             newPostText: ''\r\n//         }\r\n//     });\r\n//     const onSubmit = data => console.log(data);\r\n//\r\n//     return (\r\n//         <form onSubmit={handleSubmit(onSubmit)} noValidate autoComplete={'off'}>\r\n//             <div>\r\n//                 <textarea {...register(\"newPostText\")} placeholder={'your post'}/>\r\n//             </div>\r\n//             <div>\r\n//                 <button type={'submit'}>Post</button>\r\n//             </div>\r\n//\r\n//         </form>\r\n//     );\r\n//\r\n// const MyPosts = (props) => {\r\n//     let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} id={p.id}/>);\r\n//\r\n//     let newPostElement = React.createRef()\r\n//\r\n//     let onAddPost = (values) => {\r\n//         props.addPost(values.newPostText);\r\n//     }\r\n//\r\n//     return (\r\n//         <div className={classes.postsBlock}>\r\n//             <h3>My posts</h3>\r\n//             <AddNewPostForm onSubmit={onAddPost}/>\r\n//             <div className={classes.posts}>\r\n//                 {postsElements}\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n//\r\n// export default MyPosts;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps) (MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = ({profile, status, updateStatus}) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={profile} status={status} updateStatus={updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;\r\n\r\n","//Maxim Saharov\r\nimport React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {useLocation, useNavigate, useParams} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    constructor(props) {\r\n        super( props );\r\n        this.state = {\r\n            isShowMyProfile: true\r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n        let userIdFromPath = +this.props.router.params.userId;\r\n        let authorisedUserId = this.props.authorisedUserId;\r\n\r\n        if (userIdFromPath) {\r\n\r\n            this.props.getUserProfile( userIdFromPath );\r\n            this.props.getStatus( userIdFromPath );\r\n\r\n        } else {\r\n\r\n            if (this.props.isAuth) {\r\n                this.props.getUserProfile( authorisedUserId );\r\n                this.props.getStatus( authorisedUserId );\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        let userIdFromPath = +this.props.router.params.userId;\r\n        let authorizedUserId = this.props.authorizedUserId;\r\n        let isShowMyProfile = this.state.isShowMyProfile;\r\n\r\n        if (isShowMyProfile) {\r\n\r\n            if (userIdFromPath === authorizedUserId) {\r\n                this.setState( {isShowMyProfile: false} )\r\n            }\r\n\r\n            if (!userIdFromPath && this.props.isAuth) {\r\n                this.props.getUserProfile( authorizedUserId );\r\n                this.props.getStatus( authorizedUserId );\r\n                this.setState( {isShowMyProfile: false} )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.props.isAuth && !this.props.router.params.userId) {\r\n            return <Navigate to={'/login'} />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n// wrapper to use react router's v6 hooks in class component (to use HOC pattern, like in router v5)\r\nfunction withRouter(Component) {\r\n\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n\r\n        return <Component\r\n            {...props}\r\n            router={{location, navigate, params}} />;\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\n// let AuthRedirectComponent = withAuthRedirect (ProfileContainer) //redirect by HOC\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nconst ProfileContainerCompose = compose(\r\n    //withAuthRedirect,\r\n    withRouter,\r\n    connect( mapStateToProps, {getUserProfile, getStatus, updateStatus} )\r\n)( ProfileContainer );\r\n\r\nexport default ProfileContainerCompose;\r\n\r\n\r\n//Fox1k ***\r\n// import React from 'react';\r\n// import Profile from './Profile';\r\n//\r\n// import { connect } from 'react-redux';\r\n// import {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\n// import {Navigate, useLocation, useNavigate, useParams} from 'react-router-dom';\r\n// import withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\n//\r\n// class ProfileContainer extends React.Component {\r\n//     componentDidMount() {\r\n//         let userId = this.props.router.params.userId;\r\n//\r\n//          if (!userId) userId = this.props.authorizedUserId;\r\n//         this.props.getUserProfile(userId)\r\n//         this.props.getStatus(userId)\r\n//     }\r\n//     componentDidUpdate(prevProps) {\r\n//         let userId = this.props.router.params.userId;\r\n//         if (prevProps.router.params.userId !== userId) {\r\n//             let userId = this.props.authorizedUserId;\r\n//             this.props.getUserProfile(userId)\r\n//             this.props.getStatus(userId)\r\n//\r\n//         }\r\n//     }\r\n//\r\n//     render() {\r\n//         return (\r\n//             <Profile {...this.props}\r\n//                      profile={this.props.profile}\r\n//                      status={this.props.status}\r\n//                      updateStatus={this.props.updateStatus} />\r\n//     )\r\n//     }\r\n// }\r\n//\r\n// // let AuthRedirectComponent = withAuthRedirect (ProfileContainer) //redirect by HOC\r\n//\r\n// let mapStateToProps = (state) => ({\r\n//     profile: state.profilePage.profile,\r\n//     status: state.profilePage.status,\r\n//     authorizedUserId: state.auth.userId,\r\n//     isAuth: state.auth.isAuth\r\n// });\r\n//\r\n// function withRouter(Component) {\r\n//     function ComponentWithRouterProp(props) {\r\n//         let location = useLocation();\r\n//         let navigate = useNavigate();\r\n//         let params = useParams();\r\n//         return <Component {...props} router={{ location, navigate, params }} />;\r\n//     }\r\n//     return ComponentWithRouterProp;\r\n// }\r\n//\r\n// export default connect(mapStateToProps, { getUserProfile, getStatus, updateStatus })(\r\n//     withRouter(ProfileContainer)\r\n// );\r\n\r\n// DIMYCH\r\n// import React from 'react';\r\n// import Profile from \"./Profile\";\r\n// import axios from \"axios\";\r\n// import {connect} from \"react-redux\";\r\n// import {setUserProfile} from \"../../redux/profile-reducer\";\r\n// import {withRouter} from \"react-router-dom\";\r\n//\r\n// class ProfileContainer extends React.Component {\r\n//     componentDidMount() {\r\n//         let userId = this.props.match.params.userId;\r\n//         if (!userId) {\r\n//             userId = 2;\r\n//         }\r\n//         axios.get(`https://social-network.samuraijs.com/api/1.0/profile/`+ userId)\r\n//             .then(response => {\r\n//\r\n//                 this.props.setUserProfile(response.data)\r\n//             });\r\n//     }\r\n//\r\n//     render() {\r\n//         return (\r\n//             <Profile{...this.props} profile={this.props.profile}/>\r\n//         )\r\n//     }\r\n// };\r\n//\r\n// let mapStateToProps = (state) => ({\r\n//     profile: state.profilePage.profile\r\n// })\r\n//\r\n// let WithURLDataContainerComponent = withRouter(ProfileContainer)\r\n//\r\n// export default connect (mapStateToProps, {setUserProfile}) (WithURLDataContainerComponent);"],"names":["React","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","className","classes","src","photos","large","alt","aboutMe","lookingForAJobDescription","Preloader","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","postsElements","posts","map","p","id","styles","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileContainer","isShowMyProfile","userIdFromPath","this","router","params","userId","authorisedUserId","getUserProfile","getStatus","isAuth","prevProps","prevState","snapshot","authorizedUserId","setState","to","compose","Component","location","useLocation","navigate","useNavigate","useParams","auth"],"sourceRoot":""}